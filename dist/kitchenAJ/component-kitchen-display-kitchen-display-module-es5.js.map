{"version":3,"sources":["src/app/component/kitchen-display/dashboard/dashboard.component.html","src/app/component/kitchen-display/prediction/prediction.component.html","src/app/component/kitchen-display/quantity/quantity.component.html","src/app/component/kitchen-display/dashboard/dashboard.component.scss","src/app/component/kitchen-display/dashboard/dashboard.component.ts","src/app/component/kitchen-display/kitchen-display.module.ts","src/app/component/kitchen-display/prediction/prediction.component.scss","src/app/component/kitchen-display/prediction/prediction.component.ts","src/app/component/kitchen-display/quantity/quantity.component.scss","src/app/component/kitchen-display/quantity/quantity.component.ts","src/app/shared/json2csv.service.ts","src/app/shared/shared-http.service.ts","src/app/shared/socket.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"btnpostion\\\">\\n  <button class=\\\"btn btn-primary\\\" (mousedown)=\\\"onDownload()\\\">\\n    <i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i>\\n    &nbsp; CSV Download</button>\\n</div>\\n\\n<table class=\\\"table\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Quantity</th>\\n      <th>Created Till Now</th>\\n      <th>Predicted</th>\\n      <th>Status</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let item of listOrders\\\">\\n      <td>{{item.name}}</td>\\n      <td>{{item.totalqunatity}}</td>\\n      <td>{{item.created}}</td>\\n      <td>{{item.predicted}}</td>\\n      <td><button (click)=\\\"onDone(item)\\\" class=\\\"bt btn-success\\\"> <i class=\\\"fa fa-check-circle-o\\\" aria-hidden=\\\"true\\\"></i>\\n          Done</button></td>\\n    </tr>\\n    <tr *ngIf=\\\"isEmpty\\\">\\n      <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">No Data Found</td>\\n    </tr>\\n  </tbody>\\n</table>\"","export default \"<div class=\\\"card-group\\\">\\n\\n    <form #predictionForm=\\\"ngForm\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 position\\\" *ngFor=\\\"let item of listFood,let i =index\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"exampleInputEmail1\\\">{{item.name}}</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"predicted\\\" placeholder=\\\"Enter prediction\\\"\\n                        [(ngModel)]=\\\"item.predicted\\\">\\n                </div>\\n            </div>\\n        </div>\\n\\n        <br>\\n        <div class=\\\"btnpostion\\\">\\n            <button class=\\\"btn btn-primary\\\" (mousedown)=\\\"onClickSubmit(predictionForm.value)\\\">\\n                <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>\\n                Submit</button> &nbsp;\\n            <button (mousedown)=\\\"predictionForm.reset()\\\" class=\\\"btn btn-warning\\\">\\n                <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n                Clear</button>\\n        </div>\\n    </form>\\n\\n</div>\"","export default \"<div class=\\\"card-group\\\" *ngIf=\\\"!isEmpty\\\">\\n\\n    <form #orderForm=\\\"ngForm\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 position\\\" *ngFor=\\\"let item of listOrders,let i =index\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"exampleInputEmail1\\\">{{item.name}}</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"predicted\\\" placeholder=\\\"Enter quantity\\\"\\n                        [(ngModel)]=\\\"item.qunatity\\\">\\n                </div>\\n            </div>\\n        </div>\\n\\n        <br>\\n        <div class=\\\"btnpostion\\\">\\n            <button class=\\\"btn btn-primary\\\" (mousedown)=\\\"onClickSubmit(orderForm.value)\\\">\\n                <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>\\n                Submit</button> &nbsp;\\n            <button (mousedown)=\\\"orderForm.reset()\\\" class=\\\"btn btn-warning\\\">\\n                <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n                Clear</button>\\n        </div>\\n    </form>\\n\\n</div>\\n\\n<div *ngIf=\\\"isEmpty\\\">\\n    No Prediction Made\\n</div>\"","export default \".btnpostion {\\n  padding: 20px;\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2tpdGNoZW4tZGlzcGxheS9kYXNoYm9hcmQvRDpcXFByb2plY3RzIEt1c2hhbFxcS2l0Y2hlbiBBcHBsaWNhdGlvblxca2l0Y2hlbkFKL3NyY1xcYXBwXFxjb21wb25lbnRcXGtpdGNoZW4tZGlzcGxheVxcZGFzaGJvYXJkXFxkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudC9raXRjaGVuLWRpc3BsYXkvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnQva2l0Y2hlbi1kaXNwbGF5L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRucG9zdGlvbntcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn0iLCIuYnRucG9zdGlvbiB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGZsb2F0OiByaWdodDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SharedHttpService } from 'src/app/shared/shared-http.service';\nimport { SocketService } from '../../../shared/socket.service'\nimport { Json2csvService } from 'src/app/shared/json2csv.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  listOrders: any[];\n  Orders: any;\n  isEmpty: boolean;\n  constructor(\n    public http: SharedHttpService,\n    public socket: SocketService,\n    public j2c: Json2csvService) {\n    this.socket.listOfData.subscribe((data: any) => {\n      if (data) { this.getPrediction() }\n    })\n  }\n\n  ngOnInit() {\n    this.getPrediction()\n  }\n\n  getPrediction() {\n    this.http.get('/order', null).subscribe((response: any) => {\n      if (response.length !== 0) {\n        this.Orders = response[0]\n        this.listOrders = this.Orders.dailyorders.filter(element => element.totalqunatity > 0 || element.created>0);\n        this.listOrders.length > 0 ? this.isEmpty = false : this.isEmpty = true\n      }\n      else {\n        this.isEmpty = true\n      }\n    })\n  }\n\n  onDone(item) {\n    let obj = {\n      _id: this.Orders._id,\n      data: item\n    }\n    if (item.totalqunatity < 1) {\n      alert('No pending quantity');\n    }\n    else {\n      this.socket.addData(obj);\n    }\n  }\n\n  onDownload() {\n    this.j2c.downloadFile(this.listOrders, 'Report', ['name', 'created', 'predicted'])\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PredictionComponent } from './prediction/prediction.component';\nimport { QuantityComponent } from './quantity/quantity.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nconst routes: Routes = [{\n  path: 'dashboard',\n  component: DashboardComponent\n}, {\n  path: 'prediction',\n  component: PredictionComponent\n}, {\n  path: 'quantity',\n  component: QuantityComponent\n}\n\n]\n\n@NgModule({\n  declarations: [DashboardComponent, PredictionComponent, QuantityComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class KitchenDisplayModule { }\n","export default \".position {\\n  padding-left: 50px;\\n  padding-top: 20px;\\n}\\n\\n.btnpostion {\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2tpdGNoZW4tZGlzcGxheS9wcmVkaWN0aW9uL0Q6XFxQcm9qZWN0cyBLdXNoYWxcXEtpdGNoZW4gQXBwbGljYXRpb25cXGtpdGNoZW5BSi9zcmNcXGFwcFxcY29tcG9uZW50XFxraXRjaGVuLWRpc3BsYXlcXHByZWRpY3Rpb25cXHByZWRpY3Rpb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudC9raXRjaGVuLWRpc3BsYXkvcHJlZGljdGlvbi9wcmVkaWN0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksbUJBQUE7RUFDQSxvQkFBQTtFQUNBLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9raXRjaGVuLWRpc3BsYXkvcHJlZGljdGlvbi9wcmVkaWN0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBvc2l0aW9ue1xyXG4gICAgcGFkZGluZy1sZWZ0OjUwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDoyMHB4O1xyXG59XHJcblxyXG4uYnRucG9zdGlvbntcclxuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICAgIGZsb2F0OiByaWdodDtcclxufSIsIi5wb3NpdGlvbiB7XG4gIHBhZGRpbmctbGVmdDogNTBweDtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG59XG5cbi5idG5wb3N0aW9uIHtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIGZsb2F0OiByaWdodDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SharedHttpService } from 'src/app/shared/shared-http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-prediction',\n  templateUrl: './prediction.component.html',\n  styleUrls: ['./prediction.component.scss']\n})\nexport class PredictionComponent implements OnInit {\n\n  listFood: any[]\n  constructor(public http: SharedHttpService, public router: Router) { }\n\n  ngOnInit() {\n    this.getPrediction()\n  }\n\n  getPrediction() {\n    this.http.get('/food', null).subscribe((response: any) => {\n      this.listFood = response\n    })\n  }\n\n  onClickSubmit(data) {\n    this.http.post('/order', null, this.listFood).subscribe((response: any) => {\n      this.http.successMessage();\n      this.router.navigate(['/kitchen/dashboard']);\n    }, (err) => {\n      this.http.errorMessage(err.error.message);\n    })\n  }\n\n}\n","export default \".position {\\n  padding-left: 50px;\\n  padding-top: 20px;\\n}\\n\\n.btnpostion {\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2tpdGNoZW4tZGlzcGxheS9xdWFudGl0eS9EOlxcUHJvamVjdHMgS3VzaGFsXFxLaXRjaGVuIEFwcGxpY2F0aW9uXFxraXRjaGVuQUovc3JjXFxhcHBcXGNvbXBvbmVudFxca2l0Y2hlbi1kaXNwbGF5XFxxdWFudGl0eVxccXVhbnRpdHkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudC9raXRjaGVuLWRpc3BsYXkvcXVhbnRpdHkvcXVhbnRpdHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0EsWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50L2tpdGNoZW4tZGlzcGxheS9xdWFudGl0eS9xdWFudGl0eS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3NpdGlvbntcclxuICAgIHBhZGRpbmctbGVmdDo1MHB4O1xyXG4gICAgcGFkZGluZy10b3A6MjBweDtcclxufVxyXG5cclxuLmJ0bnBvc3Rpb257XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn0iLCIucG9zaXRpb24ge1xuICBwYWRkaW5nLWxlZnQ6IDUwcHg7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xufVxuXG4uYnRucG9zdGlvbiB7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICBmbG9hdDogcmlnaHQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { SharedHttpService } from 'src/app/shared/shared-http.service';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-quantity',\n  templateUrl: './quantity.component.html',\n  styleUrls: ['./quantity.component.scss']\n})\nexport class QuantityComponent implements OnInit {\n  listOrders: any[];\n  Orders: any;\n  orderForm: FormGroup;\n  isEmpty: boolean;\n\n  constructor(public http: SharedHttpService, public router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.getPrediction()\n  }\n\n  getPrediction() {\n    this.http.get('/order', null).subscribe((response: any) => {\n      if (response.length === 0) {\n        this.isEmpty = true;\n      }\n      else {\n        this.isEmpty = false;\n        this.Orders = response[0]\n        this.listOrders = this.Orders.dailyorders\n      }\n    })\n  }\n\n  onClickSubmit(data) {\n    this.Orders.dailyorders = this.listOrders\n    this.http.put('/order/' + this.Orders._id, null, this.Orders).subscribe((response: any) => {\n      this.http.successMessage();\n      this.router.navigate(['/kitchen/dashboard']);\n    }, (err) => {\n      this.http.errorMessage();\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Json2csvService {\n\n  constructor() { }\n\n  downloadFile(data, filename = 'data', headers) {\n    let csvData = this.ConvertToCSV(data, headers);\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\n    let dwldLink = document.createElement(\"a\");\n    let url = URL.createObjectURL(blob);\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n    if (isSafariBrowser) {\n      dwldLink.setAttribute(\"target\", \"_blank\");\n    }\n    dwldLink.setAttribute(\"href\", url);\n    dwldLink.setAttribute(\"download\", filename + '_' + new Date() + \".csv\");\n    dwldLink.style.visibility = \"hidden\";\n    document.body.appendChild(dwldLink);\n    dwldLink.click();\n    document.body.removeChild(dwldLink);\n  }\n  ConvertToCSV(objArray, headerList) {\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n    let row = 'S.No,';\n    for (let index in headerList) {\n      row += headerList[index] + ',';\n    }\n    row = row.slice(0, -1);\n    str += row + '\\r\\n';\n    for (let i = 0; i < array.length; i++) {\n      let line = (i + 1) + '';\n      for (let index in headerList) {\n        let head = headerList[index];\n        line += ',' + array[i][head];\n      }\n      str += line + '\\r\\n';\n    }\n    return str;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SharedHttpService {\n\n  headers = new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n  url: any = environment.url;\n\n  constructor(private _http: HttpClient) { }\n\n  public get(endpoint, params = null) {\n    const queryString = params ? this._objectToQueryString(params) : '';\n    endpoint = endpoint + (queryString ? '?' + queryString : '');\n    return this._http.get(this.url + endpoint, { headers: this.headers })\n  }\n\n\n  post(endpoint, params = null, data) {\n    const queryString = params ? this._objectToQueryString(params) : '';\n    endpoint = endpoint + (queryString ? '?' + queryString : '');\n    return this._http.post(this.url + endpoint, data, { headers: this.headers })\n  }\n\n  put(endpoint, params = null, data) {\n    const queryString = params ? this._objectToQueryString(params) : '';\n    endpoint = endpoint + (queryString ? '?' + queryString : '');\n    return this._http.put(this.url + endpoint, data, { headers: this.headers })\n  }\n\n  delete(endpoint, params = null) {\n    const queryString = params ? this._objectToQueryString(params) : '';\n    endpoint = endpoint + (queryString ? '?' + queryString : '');\n    return this._http.delete(this.url + endpoint, { headers: this.headers })\n  }\n\n  _objectToQueryString(object) {\n    return Object.keys(object).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`).join('&');\n  }\n\n  successMessage(){\n    alert('Record added Successfully');\n  }\n\n  errorMessage(msg=null){\n    alert(msg || 'Something went wrong Please try again later');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SocketService {\n  listOfData = this.socket.fromEvent('document')\n  constructor(private socket: Socket) { }\n\n  addData(data) {\n    this.socket.emit('addData', data)\n  }\n}\n"],"sourceRoot":"webpack:///"}